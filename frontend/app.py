import streamlit as st
import requests

st.set_page_config(page_title="EnergyTime", page_icon="logo_energytime.png", layout="wide")

# Sidebar
st.sidebar.image("logo_energytime.png", width=100)
st.sidebar.title("EnergyTime")

paginas = st.sidebar.radio("", ["‚ò∞ Sobre", "üìä An√°lises", "üîå Equipamentos GoodWe", "üí° Assistente Alexa","üí¨ IA Personalizada", "‚öôÔ∏è Configura√ß√µes"])

st.sidebar.markdown("---")

# Conte√∫do principal
if paginas == "‚ò∞ Sobre":

    st.title("üå± O que √© a EnergyTime?")
    st.markdown("---")

    # Se√ß√£o: Nosso Objetivo
    st.subheader("üìå Nosso Objetivo")
    st.write("""
    A EnergyTime conecta equipamentos de energia com assistentes virtuais, oferecendo ferramentas inovadoras para melhorar a experi√™ncia do usu√°rio.  
    Queremos tornar a tecnologia sustent√°vel acess√≠vel, pr√°tica e intuitiva, mesmo para quem n√£o tem familiaridade com energia ou automa√ß√£o residencial.
    """)
    st.write("""
    Com nossas solu√ß√µes, o usu√°rio ter√° acesso a recursos como:  
    - Previs√£o de quedas de energia usando IA  
    - Controle de dispositivos via Alexa  
    - Respostas personalizadas sobre consumo e efici√™ncia energ√©tica  
    - Entre outros recursos que facilitam a vida no dia a dia
    """)

    # Se√ß√£o: Colabora√ß√£o com a GoodWe
    st.subheader("ü§ù Colabora√ß√£o com a GoodWe")
    st.write("""
    Estamos integrando nossos sistemas com os carregadores, inversores e outros equipamentos da GoodWe, garantindo uma automa√ß√£o inteligente e confi√°vel para o gerenciamento de energia.
    """)

    # Se√ß√£o: Funcionalidades do Projeto
    # Se√ß√£o: Funcionalidades do Projeto
    st.subheader("‚ö° Funcionalidades do Nosso Projeto")
    st.write("""
    A EnergyTime oferece uma experi√™ncia completa para gest√£o de energia de forma pr√°tica e inteligente, tanto pelo site/app quanto pela Alexa. Entre as principais funcionalidades, destacamos:  

    - **Gr√°ficos de energia e cr√©ditos**: acompanhe a energia gerada, consumida e a renda total com cr√©dito da rede, tanto no √∫ltimo dia quanto no √∫ltimo m√™s.  
    - **Monitoramento de equipamentos em tempo real**: veja o status de cada dispositivo da sua casa, como a bateria principal, por exemplo, com a porcentagem de carga atual.  
    - **Previs√£o de quedas de energia**: receba alertas para o dia atual e o pr√≥ximo, garantindo que voc√™ esteja sempre preparado.  
    - **Hist√≥rico de comunica√ß√µes com a Alexa**: consulte todas as intera√ß√µes anteriores, mantendo o controle sobre os comandos e respostas.  
    - **IA personalizada para d√∫vidas e orienta√ß√£o**: converse sobre o funcionamento dos equipamentos e receba informa√ß√µes detalhadas sobre energia e efici√™ncia diretamente no app ou site.
    """)

    # Se√ß√£o: Sobre a Equipe
    st.subheader("üë®‚Äçüíª Sobre a Equipe")
    st.write("""
    Nosso time √© formado por estudantes de Ci√™ncias da Computa√ß√£o apaixonados por tecnologia e sustentabilidade:  
    - Enzo Cerneviva  
    - Gustavo Cordeiro Braga  
    - Murilo Justino Arcanjo  
    - Rafael Quattrer Dalla Costa  
    """)
    st.write("Trabalhamos juntos para aproximar pessoas das tecnologias que tornam a energia mais inteligente e sustent√°vel.")

    st.markdown("---")


    # Tr√™s colunas: logo1 | espa√ßo | logo2
    col1, col2, a, b, c, d, e, f, g = st.columns([1, 1, 1, 1, 1, 1, 1, 1, 1])   

    with col1:
        st.image("logo_energytime.png", width=150)
    with col2:
        st.image("logo_goodwe.png", width=150)


elif paginas == "üìä An√°lises":

    st.title("üìä Visualiza√ß√£o dos Dados")
    st.header("An√°lise de dados de energia da casa no √∫ltimo m√™s")
    st.header("An√°lise de dados de energia da casa no √∫ltimo dia")

elif paginas == "üîå Equipamentos GoodWe":
    st.title("üîå Informa√ß√µes sobre os Equipamentos")
    st.markdown("---")

    # Primeira linha
    col1, col2 = st.columns(2)

    with col1:
        st.markdown("### INVERSOR DA CASA")
        st.metric(label="Pot√™ncia", value="~68 kW", delta="√öltimos 5 min")
        
    with col2:
        st.markdown("### BATERIA DA CASA")
        st.metric(label="Carga Atual", value="~72%", delta="No momento")

    st.markdown("")

    # Segunda linha
    col3, col4 = st.columns(2)

    with col3:
        st.markdown("### CR√âDITOS NO DIA")
        st.metric(label="Economia", value="~35 EUR", delta="Acumulado hoje")

    with col4:
        st.markdown("### CONSUMO DA CASA")
        st.metric(label="Pot√™ncia", value="~50 kW", delta="√öltimos 5 min")
    
    st.markdown("""  
  """)
    st.markdown("---")

    st.markdown("### ‚ö° Previs√£o de Queda de Energia")


    col5, col6 = st.columns(2)

    with col5:
        st.metric(label="Hoje", value="N√£o", delta="Baseado em an√°lise clim√°tica")

    with col6:
        st.metric(label="Amanh√£", value="Sim", delta="Baseado em an√°lise clim√°tica")


elif paginas == "üí° Assistente Alexa":

    st.title("Hist√≥rico de Intera√ß√µes com a Alexa")
    st.markdown("---")

    URL_BACKEND = "https://energytime-challenge-01.onrender.com/historico"  # ajustar no deploy

    # Container principal com estilo (imitando border-radius e fundo claro)
    st.markdown(
        """
        <style>
        .chat-container {
            border: 1px solid #ddd;
            border-radius: 15px;
            padding: 20px;
            background-color: #f9f9f9;
            max-height: 500px;
            overflow-y: auto;
        }
        .mensagem {
            margin: 10px 0;
            padding: 10px 15px;
            border-radius: 15px;
            max-width: 70%;
            word-wrap: break-word;
        }
        .entrada {
            background-color: #DCF8C6;  /* verde claro estilo WhatsApp */
            margin-left: auto;
            text-align: right;
        }
        .resposta {
            background-color: #ffffff;
            border: 1px solid #ddd;
            margin-right: auto;
            text-align: left;
        }
        .timestamp {
            font-size: 0.8em;
            color: #888;
            margin: 2px 5px;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

    try:
        historico = requests.get(URL_BACKEND).json()
    except Exception:
        historico = []

    if historico:
        st.markdown('<div class="chat-container">', unsafe_allow_html=True)

        for item in historico[::-1]:  # mais recentes primeiro
            st.markdown(f'<div class="timestamp">{item["timestamp"]} | Intent: {item["intent"]}</div>', unsafe_allow_html=True)

            # Entrada (usu√°rio/Alexa) - lado direito
            st.markdown(f'<div class="mensagem entrada">{item["entrada"]}</div>', unsafe_allow_html=True)

            # Resposta (nosso sistema) - lado esquerdo
            st.markdown(f'<div class="mensagem resposta">{item["resposta"]}</div>', unsafe_allow_html=True)

        st.markdown('</div>', unsafe_allow_html=True)
    else:
        st.info("‚ö†Ô∏è N√£o h√° nenhum hist√≥rico de informa√ß√µes no momento.")
        
elif paginas == "üí¨ IA Personalizada":

    st.title("Converse com a IA sobre qualquer d√∫vida sobre energia ou sobre os equipamentos")

elif paginas == "‚öôÔ∏è Configura√ß√µes":

    st.title("‚öôÔ∏è Ajustes do sistema")

